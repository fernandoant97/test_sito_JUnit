version: '3.8'
services:
  tomcat:
    build:
      context: ./build/tomcat
      dockerfile: DOCKERFILE
    ports:
      - "8005:8005"
      - "8080:8080"
    volumes:
      - ./web:/usr/local/tomcat/webapps
      - ./site.conf:/etc/nginx/conf.d/default.conf
    networks:
      - internal

  oracle-sql-developer:
    image: marcelhuberfoo/sqldeveloper
    volumes:
      - ./scripts:/scripts
    networks:
      - internal
    environment:
      - ORACLE_HOST=oracle  # Nome del servizio del container Oracle nel tuo file docker-compose.yml
      - ORACLE_PORT=1521   # Porta del database Oracle
      - ORACLE_SID=ORCLCDB  # SID del database Oracle
      - ORACLE_USER=DWMANAGER  # Nome utente per la connessione al database Oracle
      - ORACLE_PASSWORD=root  # Password per la connessione al database Oracle

  oracle:
    image: container-registry.oracle.com/database/free:latest
    environment:
      - ORACLE_SID=XE
      - ORACLE_PDB=ORCLPDB1
      - ORACLE_PWD=oracle
    volumes:
      - ./oracle-data:/opt/oracle/oradata
      - ./C:/Users/parad/Desktop/test-sito/build/oracle/export.sql:/docker-entrypoint-initdb.d
    networks:
      - internal

  selenium: # per selenium non specifico "networks: internal" perchè l'accesso avviene da parte dell''host esterno -> 
            #quindi selenium mette a disposizione all'host le porte 4444 e 5900 -> il servizio test si collega alle porte 
            #tramite l'host (infatti l'URL di connessione è 'http://host.docker.internal:8080/')
    
    image: selenium/standalone-chrome
    ports:
      - "4444:4444"
      - "5900:5900" # porta per VNC
    shm_size: '2gb'

  test:
    build:
      context: ./build/junit
      dockerfile: DOCKERFILE
    volumes:
      - ./test-sito/src/test/java:/tests
    networks:
      - internal
    depends_on:
      - tomcat
      - selenium

networks:
  internal:
    driver: bridge
